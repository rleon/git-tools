#!/bin/bash
#

REPLY=""

function get_project() {
	local _PDIR=$1
	if [ -e "$_PDIR/scripts/faddr2line" ]; then
		REPLY="kernel"
		return
	fi

	if [ -e "$_PDIR/buildlib/cbuild" ]; then
		REPLY="rdma-core"
		return
	fi

	if [ -e "$_PDIR/rdma/rdma.h" ]; then
		REPLY="iproute"
		return
	fi

	if [ -e "$_PDIR/x" ]; then
		REPLY="x-tools"
		return
	fi

	REPLY=""
}

function get_target() {
	local _PROJECT=$1
	local _TARGET=""
	if [ "$_PROJECT" == "rdma-core" ]; then
		_TARGET="rdma-core"
	fi

	if [ "$_PROJECT" == "kernel" ]; then
		_TARGET=$(git symbolic-ref --short HEAD)
		if [ "$_TARGET" != "rdma-next" ] && [ "$_TARGET" != "rdma-rc" ]; then
			TRACKED_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name @{u})
			if [ "$TRACKED_BRANCH" == "net-next/master" ]; then
				_TARGET="net-next"
			else
				if [ "$TRACKED_BRANCH" == "net/master" ]; then
					_TARGET="net-next"
				else
					# Let's put default for now
					_TARGET="rdma-next"
				fi
			fi
		fi
	fi

	if [ "$_PROJECT" == "iproute" ]; then
		_TARGET=$(git symbolic-ref --short HEAD)
		if [ "$_TARGET" != "iproute2-next" ]; then
			# Let's put default for now
			_TARGET="iproute2-next"
		fi
		if [ "$_TARGET" != "iproute2-rc" ]; then
			# Let's put default for now
			_TARGET="iproute2"
		fi
	fi

	REPLY=$_TARGET
}

function checkpatch() {
        local _PDIR=$1
        local _PROJECT=$2
	local _GIT_ROOT=$3

        sed -i "/^Issue:[ 0-9]*/Id" $_PDIR/*.patch
        sed -i "/^Change-id:[ 0-9]*/Id" $_PDIR/*.patch

        if [ "$_PROJECT" != "kernel" ]; then
                local _IN_TREE="--no-tree --ignore PREFER_KERNEL_TYPES,FILE_PATH_CHANGES,EXECUTE_PERMISSIONS"
		_GIT_ROOT="$HOME/src/kernel"
        else
                local _IN_TREE=""
        fi

	cd $_PDIR
        for _file in *.patch; do
                [ -e "$_file" ] || continue
                [ "$_file" != "0000-cover-letter.patch" ] || continue
                #perl $_GIT_ROOT/scripts/checkpatch.pl $_IN_TREE -q $_filea
                set +e
                # Warnings returns error too
		export GIT_DIR=$_GIT_ROOT
                $_GIT_ROOT/scripts/checkpatch.pl --max-line-length=80 --root=$_GIT_ROOT --color=always --summary-file $_file |\
                        sed '/NOTE: For some of the reported/,+10 d' |\
                        sed '/has no obvious style problems and is ready for submission/,+1 d' |\
                        head -n -1
                set -e
        done
}
